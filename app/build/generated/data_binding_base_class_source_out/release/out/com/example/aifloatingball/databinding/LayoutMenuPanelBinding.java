// Generated by view binder compiler. Do not edit!
package com.example.aifloatingball.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aifloatingball.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMenuPanelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout btnBookmark;

  @NonNull
  public final LinearLayout btnFloatingMode;

  @NonNull
  public final LinearLayout btnHistory;

  @NonNull
  public final LinearLayout btnNightMode;

  @NonNull
  public final LinearLayout btnShare;

  @NonNull
  public final ImageView iconAdBlock;

  @NonNull
  public final ImageView iconBookmark;

  @NonNull
  public final ImageView iconDesktopMode;

  @NonNull
  public final ImageView iconFloatingMode;

  @NonNull
  public final ImageView iconHistory;

  @NonNull
  public final ImageView iconIncognito;

  @NonNull
  public final ImageView iconNightMode;

  @NonNull
  public final ImageView iconNoImage;

  @NonNull
  public final ImageView iconShare;

  @NonNull
  public final LinearLayout layoutAdBlock;

  @NonNull
  public final LinearLayout layoutDesktopMode;

  @NonNull
  public final LinearLayout layoutIncognito;

  @NonNull
  public final LinearLayout layoutNoImage;

  @NonNull
  public final FrameLayout settingsContainer;

  @NonNull
  public final SwitchMaterial switchAdBlock;

  @NonNull
  public final SwitchMaterial switchDesktopMode;

  @NonNull
  public final SwitchMaterial switchIncognito;

  @NonNull
  public final SwitchMaterial switchNoImage;

  @NonNull
  public final TextView textAdBlock;

  @NonNull
  public final TextView textBookmark;

  @NonNull
  public final TextView textDesktopMode;

  @NonNull
  public final TextView textFloatingMode;

  @NonNull
  public final TextView textHistory;

  @NonNull
  public final TextView textIncognito;

  @NonNull
  public final TextView textNightMode;

  @NonNull
  public final TextView textNoImage;

  @NonNull
  public final TextView textShare;

  private LayoutMenuPanelBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout btnBookmark,
      @NonNull LinearLayout btnFloatingMode, @NonNull LinearLayout btnHistory,
      @NonNull LinearLayout btnNightMode, @NonNull LinearLayout btnShare,
      @NonNull ImageView iconAdBlock, @NonNull ImageView iconBookmark,
      @NonNull ImageView iconDesktopMode, @NonNull ImageView iconFloatingMode,
      @NonNull ImageView iconHistory, @NonNull ImageView iconIncognito,
      @NonNull ImageView iconNightMode, @NonNull ImageView iconNoImage,
      @NonNull ImageView iconShare, @NonNull LinearLayout layoutAdBlock,
      @NonNull LinearLayout layoutDesktopMode, @NonNull LinearLayout layoutIncognito,
      @NonNull LinearLayout layoutNoImage, @NonNull FrameLayout settingsContainer,
      @NonNull SwitchMaterial switchAdBlock, @NonNull SwitchMaterial switchDesktopMode,
      @NonNull SwitchMaterial switchIncognito, @NonNull SwitchMaterial switchNoImage,
      @NonNull TextView textAdBlock, @NonNull TextView textBookmark,
      @NonNull TextView textDesktopMode, @NonNull TextView textFloatingMode,
      @NonNull TextView textHistory, @NonNull TextView textIncognito,
      @NonNull TextView textNightMode, @NonNull TextView textNoImage, @NonNull TextView textShare) {
    this.rootView = rootView;
    this.btnBookmark = btnBookmark;
    this.btnFloatingMode = btnFloatingMode;
    this.btnHistory = btnHistory;
    this.btnNightMode = btnNightMode;
    this.btnShare = btnShare;
    this.iconAdBlock = iconAdBlock;
    this.iconBookmark = iconBookmark;
    this.iconDesktopMode = iconDesktopMode;
    this.iconFloatingMode = iconFloatingMode;
    this.iconHistory = iconHistory;
    this.iconIncognito = iconIncognito;
    this.iconNightMode = iconNightMode;
    this.iconNoImage = iconNoImage;
    this.iconShare = iconShare;
    this.layoutAdBlock = layoutAdBlock;
    this.layoutDesktopMode = layoutDesktopMode;
    this.layoutIncognito = layoutIncognito;
    this.layoutNoImage = layoutNoImage;
    this.settingsContainer = settingsContainer;
    this.switchAdBlock = switchAdBlock;
    this.switchDesktopMode = switchDesktopMode;
    this.switchIncognito = switchIncognito;
    this.switchNoImage = switchNoImage;
    this.textAdBlock = textAdBlock;
    this.textBookmark = textBookmark;
    this.textDesktopMode = textDesktopMode;
    this.textFloatingMode = textFloatingMode;
    this.textHistory = textHistory;
    this.textIncognito = textIncognito;
    this.textNightMode = textNightMode;
    this.textNoImage = textNoImage;
    this.textShare = textShare;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMenuPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMenuPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_menu_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMenuPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_bookmark;
      LinearLayout btnBookmark = ViewBindings.findChildViewById(rootView, id);
      if (btnBookmark == null) {
        break missingId;
      }

      id = R.id.btn_floating_mode;
      LinearLayout btnFloatingMode = ViewBindings.findChildViewById(rootView, id);
      if (btnFloatingMode == null) {
        break missingId;
      }

      id = R.id.btn_history;
      LinearLayout btnHistory = ViewBindings.findChildViewById(rootView, id);
      if (btnHistory == null) {
        break missingId;
      }

      id = R.id.btn_night_mode;
      LinearLayout btnNightMode = ViewBindings.findChildViewById(rootView, id);
      if (btnNightMode == null) {
        break missingId;
      }

      id = R.id.btn_share;
      LinearLayout btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.icon_ad_block;
      ImageView iconAdBlock = ViewBindings.findChildViewById(rootView, id);
      if (iconAdBlock == null) {
        break missingId;
      }

      id = R.id.icon_bookmark;
      ImageView iconBookmark = ViewBindings.findChildViewById(rootView, id);
      if (iconBookmark == null) {
        break missingId;
      }

      id = R.id.icon_desktop_mode;
      ImageView iconDesktopMode = ViewBindings.findChildViewById(rootView, id);
      if (iconDesktopMode == null) {
        break missingId;
      }

      id = R.id.icon_floating_mode;
      ImageView iconFloatingMode = ViewBindings.findChildViewById(rootView, id);
      if (iconFloatingMode == null) {
        break missingId;
      }

      id = R.id.icon_history;
      ImageView iconHistory = ViewBindings.findChildViewById(rootView, id);
      if (iconHistory == null) {
        break missingId;
      }

      id = R.id.icon_incognito;
      ImageView iconIncognito = ViewBindings.findChildViewById(rootView, id);
      if (iconIncognito == null) {
        break missingId;
      }

      id = R.id.icon_night_mode;
      ImageView iconNightMode = ViewBindings.findChildViewById(rootView, id);
      if (iconNightMode == null) {
        break missingId;
      }

      id = R.id.icon_no_image;
      ImageView iconNoImage = ViewBindings.findChildViewById(rootView, id);
      if (iconNoImage == null) {
        break missingId;
      }

      id = R.id.icon_share;
      ImageView iconShare = ViewBindings.findChildViewById(rootView, id);
      if (iconShare == null) {
        break missingId;
      }

      id = R.id.layout_ad_block;
      LinearLayout layoutAdBlock = ViewBindings.findChildViewById(rootView, id);
      if (layoutAdBlock == null) {
        break missingId;
      }

      id = R.id.layout_desktop_mode;
      LinearLayout layoutDesktopMode = ViewBindings.findChildViewById(rootView, id);
      if (layoutDesktopMode == null) {
        break missingId;
      }

      id = R.id.layout_incognito;
      LinearLayout layoutIncognito = ViewBindings.findChildViewById(rootView, id);
      if (layoutIncognito == null) {
        break missingId;
      }

      id = R.id.layout_no_image;
      LinearLayout layoutNoImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoImage == null) {
        break missingId;
      }

      id = R.id.settings_container;
      FrameLayout settingsContainer = ViewBindings.findChildViewById(rootView, id);
      if (settingsContainer == null) {
        break missingId;
      }

      id = R.id.switch_ad_block;
      SwitchMaterial switchAdBlock = ViewBindings.findChildViewById(rootView, id);
      if (switchAdBlock == null) {
        break missingId;
      }

      id = R.id.switch_desktop_mode;
      SwitchMaterial switchDesktopMode = ViewBindings.findChildViewById(rootView, id);
      if (switchDesktopMode == null) {
        break missingId;
      }

      id = R.id.switch_incognito;
      SwitchMaterial switchIncognito = ViewBindings.findChildViewById(rootView, id);
      if (switchIncognito == null) {
        break missingId;
      }

      id = R.id.switch_no_image;
      SwitchMaterial switchNoImage = ViewBindings.findChildViewById(rootView, id);
      if (switchNoImage == null) {
        break missingId;
      }

      id = R.id.text_ad_block;
      TextView textAdBlock = ViewBindings.findChildViewById(rootView, id);
      if (textAdBlock == null) {
        break missingId;
      }

      id = R.id.text_bookmark;
      TextView textBookmark = ViewBindings.findChildViewById(rootView, id);
      if (textBookmark == null) {
        break missingId;
      }

      id = R.id.text_desktop_mode;
      TextView textDesktopMode = ViewBindings.findChildViewById(rootView, id);
      if (textDesktopMode == null) {
        break missingId;
      }

      id = R.id.text_floating_mode;
      TextView textFloatingMode = ViewBindings.findChildViewById(rootView, id);
      if (textFloatingMode == null) {
        break missingId;
      }

      id = R.id.text_history;
      TextView textHistory = ViewBindings.findChildViewById(rootView, id);
      if (textHistory == null) {
        break missingId;
      }

      id = R.id.text_incognito;
      TextView textIncognito = ViewBindings.findChildViewById(rootView, id);
      if (textIncognito == null) {
        break missingId;
      }

      id = R.id.text_night_mode;
      TextView textNightMode = ViewBindings.findChildViewById(rootView, id);
      if (textNightMode == null) {
        break missingId;
      }

      id = R.id.text_no_image;
      TextView textNoImage = ViewBindings.findChildViewById(rootView, id);
      if (textNoImage == null) {
        break missingId;
      }

      id = R.id.text_share;
      TextView textShare = ViewBindings.findChildViewById(rootView, id);
      if (textShare == null) {
        break missingId;
      }

      return new LayoutMenuPanelBinding((LinearLayout) rootView, btnBookmark, btnFloatingMode,
          btnHistory, btnNightMode, btnShare, iconAdBlock, iconBookmark, iconDesktopMode,
          iconFloatingMode, iconHistory, iconIncognito, iconNightMode, iconNoImage, iconShare,
          layoutAdBlock, layoutDesktopMode, layoutIncognito, layoutNoImage, settingsContainer,
          switchAdBlock, switchDesktopMode, switchIncognito, switchNoImage, textAdBlock,
          textBookmark, textDesktopMode, textFloatingMode, textHistory, textIncognito,
          textNightMode, textNoImage, textShare);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
