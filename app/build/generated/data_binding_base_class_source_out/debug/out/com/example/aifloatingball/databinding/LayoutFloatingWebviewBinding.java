// Generated by view binder compiler. Do not edit!
package com.example.aifloatingball.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aifloatingball.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutFloatingWebviewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnExpand;

  @NonNull
  public final ImageButton btnForward;

  @NonNull
  public final ImageButton btnRefresh;

  @NonNull
  public final ImageButton btnSearch;

  @NonNull
  public final LinearLayout dragHandle;

  @NonNull
  public final WebView floatingWebview;

  @NonNull
  public final TextView gestureHint;

  @NonNull
  public final LinearLayout navigationBar;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final LinearLayout searchBar;

  @NonNull
  public final EditText searchInput;

  private LayoutFloatingWebviewBinding(@NonNull CardView rootView, @NonNull ImageButton btnBack,
      @NonNull ImageButton btnClose, @NonNull ImageButton btnExpand,
      @NonNull ImageButton btnForward, @NonNull ImageButton btnRefresh,
      @NonNull ImageButton btnSearch, @NonNull LinearLayout dragHandle,
      @NonNull WebView floatingWebview, @NonNull TextView gestureHint,
      @NonNull LinearLayout navigationBar, @NonNull ProgressBar progressBar,
      @NonNull LinearLayout searchBar, @NonNull EditText searchInput) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnClose = btnClose;
    this.btnExpand = btnExpand;
    this.btnForward = btnForward;
    this.btnRefresh = btnRefresh;
    this.btnSearch = btnSearch;
    this.dragHandle = dragHandle;
    this.floatingWebview = floatingWebview;
    this.gestureHint = gestureHint;
    this.navigationBar = navigationBar;
    this.progressBar = progressBar;
    this.searchBar = searchBar;
    this.searchInput = searchInput;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutFloatingWebviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutFloatingWebviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_floating_webview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutFloatingWebviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_expand;
      ImageButton btnExpand = ViewBindings.findChildViewById(rootView, id);
      if (btnExpand == null) {
        break missingId;
      }

      id = R.id.btn_forward;
      ImageButton btnForward = ViewBindings.findChildViewById(rootView, id);
      if (btnForward == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      ImageButton btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.btn_search;
      ImageButton btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.drag_handle;
      LinearLayout dragHandle = ViewBindings.findChildViewById(rootView, id);
      if (dragHandle == null) {
        break missingId;
      }

      id = R.id.floating_webview;
      WebView floatingWebview = ViewBindings.findChildViewById(rootView, id);
      if (floatingWebview == null) {
        break missingId;
      }

      id = R.id.gesture_hint;
      TextView gestureHint = ViewBindings.findChildViewById(rootView, id);
      if (gestureHint == null) {
        break missingId;
      }

      id = R.id.navigation_bar;
      LinearLayout navigationBar = ViewBindings.findChildViewById(rootView, id);
      if (navigationBar == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.search_bar;
      LinearLayout searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_input;
      EditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      return new LayoutFloatingWebviewBinding((CardView) rootView, btnBack, btnClose, btnExpand,
          btnForward, btnRefresh, btnSearch, dragHandle, floatingWebview, gestureHint,
          navigationBar, progressBar, searchBar, searchInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
