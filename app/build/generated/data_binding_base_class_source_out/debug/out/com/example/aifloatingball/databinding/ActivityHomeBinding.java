// Generated by view binder compiler. Do not edit!
package com.example.aifloatingball.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aifloatingball.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final ImageButton btnBookmarks;

  @NonNull
  public final ImageButton btnHistory;

  @NonNull
  public final ImageButton btnMenu;

  @NonNull
  public final ImageButton btnSettings;

  @NonNull
  public final LinearLayout homeContent;

  @NonNull
  public final CardView searchBarContainer;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final EditText searchInput;

  @NonNull
  public final RecyclerView shortcutsGrid;

  @NonNull
  public final ImageButton voiceSearch;

  @NonNull
  public final FrameLayout webviewContainer;

  private ActivityHomeBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull ImageButton btnBookmarks, @NonNull ImageButton btnHistory,
      @NonNull ImageButton btnMenu, @NonNull ImageButton btnSettings,
      @NonNull LinearLayout homeContent, @NonNull CardView searchBarContainer,
      @NonNull ImageView searchIcon, @NonNull EditText searchInput,
      @NonNull RecyclerView shortcutsGrid, @NonNull ImageButton voiceSearch,
      @NonNull FrameLayout webviewContainer) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.btnBookmarks = btnBookmarks;
    this.btnHistory = btnHistory;
    this.btnMenu = btnMenu;
    this.btnSettings = btnSettings;
    this.homeContent = homeContent;
    this.searchBarContainer = searchBarContainer;
    this.searchIcon = searchIcon;
    this.searchInput = searchInput;
    this.shortcutsGrid = shortcutsGrid;
    this.voiceSearch = voiceSearch;
    this.webviewContainer = webviewContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.btn_bookmarks;
      ImageButton btnBookmarks = ViewBindings.findChildViewById(rootView, id);
      if (btnBookmarks == null) {
        break missingId;
      }

      id = R.id.btn_history;
      ImageButton btnHistory = ViewBindings.findChildViewById(rootView, id);
      if (btnHistory == null) {
        break missingId;
      }

      id = R.id.btn_menu;
      ImageButton btnMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.btn_settings;
      ImageButton btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.home_content;
      LinearLayout homeContent = ViewBindings.findChildViewById(rootView, id);
      if (homeContent == null) {
        break missingId;
      }

      id = R.id.search_bar_container;
      CardView searchBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchBarContainer == null) {
        break missingId;
      }

      id = R.id.search_icon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.search_input;
      EditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      id = R.id.shortcuts_grid;
      RecyclerView shortcutsGrid = ViewBindings.findChildViewById(rootView, id);
      if (shortcutsGrid == null) {
        break missingId;
      }

      id = R.id.voice_search;
      ImageButton voiceSearch = ViewBindings.findChildViewById(rootView, id);
      if (voiceSearch == null) {
        break missingId;
      }

      id = R.id.webview_container;
      FrameLayout webviewContainer = ViewBindings.findChildViewById(rootView, id);
      if (webviewContainer == null) {
        break missingId;
      }

      return new ActivityHomeBinding((CoordinatorLayout) rootView, appbar, btnBookmarks, btnHistory,
          btnMenu, btnSettings, homeContent, searchBarContainer, searchIcon, searchInput,
          shortcutsGrid, voiceSearch, webviewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
