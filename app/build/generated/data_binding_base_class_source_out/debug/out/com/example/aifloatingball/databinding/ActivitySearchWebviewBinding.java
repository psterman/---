// Generated by view binder compiler. Do not edit!
package com.example.aifloatingball.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.aifloatingball.R;
import com.example.aifloatingball.view.LetterIndexBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchWebviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnSearch;

  @NonNull
  public final ImageButton btnVoice;

  @NonNull
  public final LetterIndexBar letterIndexBar;

  @NonNull
  public final TextView letterTitle;

  @NonNull
  public final LinearLayout previewContainer;

  @NonNull
  public final LinearLayout previewEngineList;

  @NonNull
  public final EditText searchInput;

  @NonNull
  public final FrameLayout voiceAnimationContainer;

  @NonNull
  public final LottieAnimationView voiceAnimationView;

  @NonNull
  public final WebView webview;

  private ActivitySearchWebviewBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnClose, @NonNull ImageButton btnSearch, @NonNull ImageButton btnVoice,
      @NonNull LetterIndexBar letterIndexBar, @NonNull TextView letterTitle,
      @NonNull LinearLayout previewContainer, @NonNull LinearLayout previewEngineList,
      @NonNull EditText searchInput, @NonNull FrameLayout voiceAnimationContainer,
      @NonNull LottieAnimationView voiceAnimationView, @NonNull WebView webview) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnSearch = btnSearch;
    this.btnVoice = btnVoice;
    this.letterIndexBar = letterIndexBar;
    this.letterTitle = letterTitle;
    this.previewContainer = previewContainer;
    this.previewEngineList = previewEngineList;
    this.searchInput = searchInput;
    this.voiceAnimationContainer = voiceAnimationContainer;
    this.voiceAnimationView = voiceAnimationView;
    this.webview = webview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchWebviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchWebviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search_webview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchWebviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_search;
      ImageButton btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.btn_voice;
      ImageButton btnVoice = ViewBindings.findChildViewById(rootView, id);
      if (btnVoice == null) {
        break missingId;
      }

      id = R.id.letter_index_bar;
      LetterIndexBar letterIndexBar = ViewBindings.findChildViewById(rootView, id);
      if (letterIndexBar == null) {
        break missingId;
      }

      id = R.id.letter_title;
      TextView letterTitle = ViewBindings.findChildViewById(rootView, id);
      if (letterTitle == null) {
        break missingId;
      }

      id = R.id.preview_container;
      LinearLayout previewContainer = ViewBindings.findChildViewById(rootView, id);
      if (previewContainer == null) {
        break missingId;
      }

      id = R.id.preview_engine_list;
      LinearLayout previewEngineList = ViewBindings.findChildViewById(rootView, id);
      if (previewEngineList == null) {
        break missingId;
      }

      id = R.id.search_input;
      EditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      id = R.id.voice_animation_container;
      FrameLayout voiceAnimationContainer = ViewBindings.findChildViewById(rootView, id);
      if (voiceAnimationContainer == null) {
        break missingId;
      }

      id = R.id.voice_animation_view;
      LottieAnimationView voiceAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (voiceAnimationView == null) {
        break missingId;
      }

      id = R.id.webview;
      WebView webview = ViewBindings.findChildViewById(rootView, id);
      if (webview == null) {
        break missingId;
      }

      return new ActivitySearchWebviewBinding((LinearLayout) rootView, btnClose, btnSearch,
          btnVoice, letterIndexBar, letterTitle, previewContainer, previewEngineList, searchInput,
          voiceAnimationContainer, voiceAnimationView, webview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
