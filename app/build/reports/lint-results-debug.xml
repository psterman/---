<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.0">

    <issue
        id="WrongViewCast"
        severity="Error"
        message="Unexpected implicit cast to `ImageButton`: layout tag was `LinearLayout`"
        category="Correctness"
        priority="9"
        summary="Mismatched view type"
        explanation="Keeps track of the view types associated with ids and if it finds a usage of the id in the Java code it ensures that it is treated as the same type."
        errorLine1="        val floatingModeButton = findViewById&lt;ImageButton>(R.id.btn_floating_mode)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="589"
            column="9"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="589"
            column="60"
            message="Id bound to a `LinearLayout` in `layout_menu_panel.xml`"/>
    </issue>

    <issue
        id="RecyclerView"
        severity="Error"
        message="Do not treat position as fixed; only use immediately and call `holder.getAdapterPosition()` to look it up later"
        category="Correctness"
        priority="8"
        summary="RecyclerView Problems"
        explanation="`RecyclerView` will **not** call `onBindViewHolder` again when the position of the item changes in the data set unless the item itself is invalidated or the new position cannot be determined.&#xA;&#xA;For this reason, you should **only** use the position parameter while acquiring the related data item inside this method, and should **not** keep a copy of it.&#xA;&#xA;If you need the position of an item later on (e.g. in a click listener), use `getAdapterPosition()` which will have the updated adapter position."
        errorLine1="    override fun onBindViewHolder(holder: CardViewHolder, position: Int) {"
        errorLine2="                                                          ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="50"
            column="59"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_fullscreen_webview`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_fullscreen_webview`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_fullscreen_webview.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_home`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_home`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.drawerlayout.widget.DrawerLayout"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_menu_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_menu_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_menu_settings.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_permission`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_permission`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.drawerlayout.widget.DrawerLayout"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_search_engine_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_search_engine_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_engine_settings.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_search_web_view`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_search_web_view`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.constraintlayout.widget.ConstraintLayout "
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_web_view.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_search_webview`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_search_webview`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`theme_entries`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_theme_entries`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;theme_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="3"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`theme_values`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_theme_values`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;theme_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="9"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_theme_entries`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_theme_entries`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;layout_theme_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="15"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_theme_values`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_theme_values`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;layout_theme_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="21"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`home_page_entries`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_home_page_entries`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;home_page_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="27"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`home_page_values`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_home_page_values`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;home_page_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="36"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_bar_positions`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_bar_positions`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;letter_index_bar_positions&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="45"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_bar_position_values`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_bar_position_values`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string-array name=&quot;letter_index_bar_position_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="50"
            column="19"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_floating_ball_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_floating_ball_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_floating_ball_dark.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_floating_ball_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_floating_ball_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_floating_ball_light.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_floating_window`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_floating_window`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_floating_window.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_letter_index_bar`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_letter_index_bar`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_index_bar.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_letter_preview`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_letter_preview`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_preview.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`bg_letter_selected`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_bg_letter_selected`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_selected.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`button_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_button_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\button_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`button_background_cancel`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_button_background_cancel`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\button_background_cancel.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`button_background_confirm`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_button_background_confirm`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\button_background_confirm.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`card_ai_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_card_ai_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`card_header_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_card_header_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\card_header_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`card_layout_theme`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_card_layout_theme`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.coordinatorlayout.widget.CoordinatorLayout"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_layout_theme.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`card_search_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_card_search_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_search_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`circle_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_circle_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\circle_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`circle_ripple`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_circle_ripple`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\circle_ripple.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`circle_ripple_active`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_circle_ripple_active`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\circle_ripple_active.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`clipboard_dialog`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_clipboard_dialog`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`colorPrimary`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_colorPrimary`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;colorPrimary&quot;>#2196F3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_background_dark&quot;>#2D2D2D&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`colorPrimaryDark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_colorPrimaryDark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;colorPrimaryDark&quot;>#1976D2&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_text_dark&quot;>#BBBBBB&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`colorAccent`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_colorAccent`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;colorAccent&quot;>#FF4081&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_title_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_title_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_title_text_dark&quot;>#BBBBBB&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_selected_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_selected_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_selected_background_dark&quot;>#454545&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_list_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_list_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_list_background_dark&quot;>#1F1F1F&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_name_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_name_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_name_text_dark&quot;>#E0E0E0&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_background_dark&quot;>#1A1A1A&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_description_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_description_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_description_text_dark&quot;>#CCCCCC&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_text_light&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_icon_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_icon_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_icon_dark&quot;>#CCCCCC&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_text_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`divider_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_divider_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;divider_dark&quot;>#333333&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_background_light&quot;>#F5F5F5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="16"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_background_dark&quot;>#212121&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_text_light&quot;>#212121&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="18"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_text_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_background_dark&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_text_light&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_text_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_launcher_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_launcher_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;ic_launcher_background&quot;>#3DDC84&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`primary`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_primary`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;primary&quot;>#2196F3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`primary_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_primary_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;primary_dark&quot;>#1976D2&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`accent`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_accent`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;accent&quot;>#FF4081&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`white`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_white`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;white&quot;>#FFFFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`black`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_black`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;black&quot;>#FF000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`transparent_black`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_transparent_black`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;transparent_black&quot;>#80000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`purple_200`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_purple_200`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;purple_200&quot;>#FFBB86FC&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`purple_500`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_purple_500`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;purple_500&quot;>#FF6200EE&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="35"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`purple_700`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_purple_700`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;purple_700&quot;>#FF3700B3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`teal_200`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_teal_200`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;teal_200&quot;>#FF03DAC5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`teal_700`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_teal_700`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;teal_700&quot;>#FF018786&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`divider`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_divider`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;divider&quot;>#BDBDBD&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;background&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`text_primary`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_text_primary`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;text_primary&quot;>#212121&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`text_secondary`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_text_secondary`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;text_secondary&quot;>#757575&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_input_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_input_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;search_input_background&quot;>#F5F5F5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_input_stroke`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_input_stroke`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;search_input_stroke&quot;>#E0E0E0&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_icon_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_icon_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_ball_icon_light&quot;>#757575&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_icon_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_icon_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_ball_icon_dark&quot;>#E0E0E0&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_text&quot;>#99000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text_selected`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text_selected`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_text_selected&quot;>#FF000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_text_dark&quot;>#99FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_text_light&quot;>#99000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_selected_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_selected_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_selected_background_dark&quot;>#1AFFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_selected_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_selected_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_selected_background_light&quot;>#1A000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_background_dark&quot;>#212121&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;letter_index_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_icon_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_icon_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_icon_dark&quot;>#CCFFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_icon_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_icon_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_icon_light&quot;>#CC000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_name_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_name_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_name_text_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_name_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_name_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_name_text_light&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_description_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_description_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_description_text_dark&quot;>#99FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_description_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_description_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_description_text_light&quot;>#99000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_list_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_list_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_list_background_dark&quot;>#1A1A1A&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_list_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_list_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;engine_list_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`divider_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_divider_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;divider_dark&quot;>#1AFFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`divider_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_divider_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;divider_light&quot;>#1A000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="72"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;drawer_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="75"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;drawer_background_dark&quot;>#1F1F1F&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_text_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_text_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;drawer_text_light&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="77"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_text_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_text_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;drawer_text_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="78"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_accent_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_accent_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_accent_light&quot;>#2196F3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="81"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`fold_accent_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_fold_accent_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;fold_accent_dark&quot;>#64B5F6&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="82"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_accent_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_accent_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_accent_light&quot;>#00BCD4&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="83"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`glass_accent_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_glass_accent_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;glass_accent_dark&quot;>#4DD0E1&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="84"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_accent_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_accent_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_accent_light&quot;>#FF4081&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`material_accent_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_material_accent_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;material_accent_dark&quot;>#FF80AB&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="86"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_background_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_background_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_background_light&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="89"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_background_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_background_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_background_dark&quot;>#2C2C2C&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_bar_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_bar_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;search_bar_background&quot;>#F5F5F5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="91"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`navigation_bar_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_navigation_bar_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;navigation_bar_background&quot;>#F5F5F5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="92"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`text_color_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_text_color_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;text_color_light&quot;>#000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="93"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`text_color_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_text_color_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;text_color_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="94"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`icon_color_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_icon_color_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;icon_color_light&quot;>#757575&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="95"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`icon_color_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_icon_color_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;icon_color_dark&quot;>#BDBDBD&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="96"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`progress_color_light`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_progress_color_light`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;progress_color_light&quot;>@color/colorAccent&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="97"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`progress_color_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_progress_color_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;progress_color_dark&quot;>@color/colorAccent&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="98"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ai_mode_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ai_mode_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;ai_mode_background&quot;>#2962FF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="101"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`normal_mode_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_normal_mode_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;normal_mode_background&quot;>#00796B&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="102"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ai_mode_indicator_bg`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ai_mode_indicator_bg`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;ai_mode_indicator_bg&quot;>#E3F2FD&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="103"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`normal_mode_indicator_bg`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_normal_mode_indicator_bg`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;normal_mode_indicator_bg&quot;>#E0F2F1&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="104"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_window_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_window_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_window_background&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="106"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_window_border`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_window_border`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;floating_window_border&quot;>#1A000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="107"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_text_color`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_text_color`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;flyme_preview_text_color&quot;>#333333&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="110"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_text_color_dark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_text_color_dark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;color name=&quot;flyme_preview_text_color_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="111"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`dialog_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_dialog_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\dialog_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`card_spacing`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_card_spacing`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;card_spacing&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_text_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_text_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_text_size&quot;>14sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`preview_text_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_preview_text_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;preview_text_size&quot;>18sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`preview_padding`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_preview_padding`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;preview_padding&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_width&quot;>32dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`preview_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_preview_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;preview_width&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_bar_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_bar_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_bar_width&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="9"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_bar_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_bar_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_bar_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_history_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_history_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;search_history_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_list_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_list_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;engine_list_width&quot;>280dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_input_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_input_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;search_input_margin&quot;>64dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_text_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_text_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_text_size&quot;>12sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_padding`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_padding`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_padding&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_bar_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_bar_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;search_bar_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="16"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_bar_margin_left_handed`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_bar_margin_left_handed`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;search_bar_margin_left_handed&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;drawer_width&quot;>280dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="18"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_title_height`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_title_height`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_title_height&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_height`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_height`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_height&quot;>56dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_icon_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_icon_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_icon_size&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_padding`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_padding`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_padding&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_icon_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_icon_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_icon_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_edge_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_edge_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_edge_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_edge_margin_left_handed`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_edge_margin_left_handed`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_edge_margin_left_handed&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_button_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_button_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_button_size&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="26"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_icon_spacing`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_icon_spacing`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_icon_spacing&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toolbar_group_spacing`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toolbar_group_spacing`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;toolbar_group_spacing&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_horizontal_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_horizontal_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`activity_vertical_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_activity_vertical_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;activity_vertical_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_webview_collapsed_height`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_webview_collapsed_height`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_webview_collapsed_height&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_webview_min_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_webview_min_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_webview_min_width&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_webview_min_height`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_webview_min_height`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_webview_min_height&quot;>150dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_card_corner_radius`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_card_corner_radius`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_card_corner_radius&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_card_elevation`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_card_elevation`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_card_elevation&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_card_edge_elevation`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_card_edge_elevation`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_card_edge_elevation&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`edge_button_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_edge_button_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;edge_button_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`button_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_button_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;button_margin&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_window_corner_radius`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_window_corner_radius`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;floating_window_corner_radius&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`edge_snap_threshold`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_edge_snap_threshold`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;edge_snap_threshold&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_edge_width&quot;>40dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_elevation`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_elevation`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_edge_elevation&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_vertical_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_vertical_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_edge_vertical_margin&quot;>80dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_letter_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_letter_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_letter_size&quot;>16sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_letter_padding`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_letter_padding`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_letter_padding&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_margin_end`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_margin_end`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_margin_end&quot;>60dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_elevation`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_elevation`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_elevation&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_padding`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_padding`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_padding&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_icon_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_icon_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_icon_size&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_text_margin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_text_margin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_text_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_text_size`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_text_size`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_preview_text_size&quot;>14sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_trigger_threshold`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_trigger_threshold`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_edge_trigger_threshold&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_peek_width`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_peek_width`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;flyme_edge_peek_width&quot;>2dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_item_height`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_item_height`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;dimen name=&quot;letter_index_item_height&quot;>36dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drawer_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drawer_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\drawer_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_item`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_item`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\engine_item.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_ball.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\floating_ball_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_layout`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_layout`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_ball_layout.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_webview`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_webview`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_window_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_window_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\floating_window_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_edge_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_edge_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\flyme_edge_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`flyme_preview_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_flyme_preview_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\flyme_preview_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`gesture_hint_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_gesture_hint_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\gesture_hint_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_360`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_360`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_360.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_ai_search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_ai_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_ai_search.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_arrow_back`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_arrow_back`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_arrow_back.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_arrow_forward`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_arrow_forward`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_arrow_forward.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_autostart`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_autostart`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_autostart.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_back`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_back`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_back.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_baidu`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_baidu`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baidu.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_baseline_close_24`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_baseline_close_24`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_close_24.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_baseline_menu_24`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_baseline_menu_24`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_menu_24.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_baseline_search_24`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_baseline_search_24`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_search_24.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_bing`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_bing`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_bing.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_block`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_block`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_block.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_bluetooth`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_bluetooth`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_bluetooth.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_bookmark`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_bookmark`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_bookmark.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_brightness`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_brightness`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_brightness.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_chatgpt`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_chatgpt`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_chatgpt.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_claude`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_claude`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_claude.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_close`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_close`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_close.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_collapse`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_collapse`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_collapse.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_deepseek`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_deepseek`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_deepseek.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_default_ai`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_default_ai`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_default_ai.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_desktop`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_desktop`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_desktop.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_doubao`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_doubao`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_doubao.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_drag_handle`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_drag_handle`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_drag_handle.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_edit`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_edit`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_edit.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_expand`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_expand`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_expand.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_expand_less`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_expand_less`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_expand_less.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_expand_more`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_expand_more`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_expand_more.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_floating_ball`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_floating_ball`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_floating_ball.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_floating_mode`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_floating_mode`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_floating_mode.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_forward`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_forward`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_forward.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_gemini`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_gemini`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_gemini.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_google`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_google`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_google.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_grok`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_grok`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_grok.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_hand`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_hand`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_hand.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_hand_left`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_hand_left`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_hand_left.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_hand_right`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_hand_right`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_hand_right.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_history`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_history`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_history.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_home`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_home`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_home.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_image`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_image`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_image.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_incognito`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_incognito`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_incognito.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_kimi`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_kimi`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_kimi.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_launcher`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_launcher`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;adaptive-icon xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_launcher_foreground`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_launcher_foreground`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_launcher_foreground.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_agenda`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_agenda`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_agenda.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_call`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_call`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_call.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_camera`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_camera`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_camera.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_compass`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_compass`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_compass.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_directions`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_directions`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_directions.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_edit`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_edit`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_edit.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_gallery`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_gallery`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_gallery.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_help`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_help`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_help.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_info_details`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_info_details`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_info_details.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_manage`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_manage`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_manage.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_rotate`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_rotate`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_rotate.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_search.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_send`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_send`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_send.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_today`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_today`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_today.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_menu_zoom`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_menu_zoom`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_zoom.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_mic`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_mic`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_mic.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_minimize`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_minimize`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_minimize.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_mode_switch`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_mode_switch`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_mode_switch.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_more`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_more`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_more.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_night`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_night`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_night.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_perplexity`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_perplexity`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_perplexity.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_privacy`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_privacy`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_privacy.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_qianwen`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_qianwen`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_qianwen.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_recent`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_recent`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_recent.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_refresh`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_refresh`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_refresh.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_resize`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_resize`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_resize.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_screenshot`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_screenshot`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_screenshot.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_search.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_search_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_search_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_search_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_search_mode`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_search_mode`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_search_mode.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_search_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_search_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_search_settings.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_settings.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_share`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_share`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_share.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_sogou`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_sogou`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_sogou.xml"
            line="1"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_theme`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_theme`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_theme.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_update`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_update`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_update.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_wenxin`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_wenxin`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_wenxin.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_wifi`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_wifi`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_wifi.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_xiaohongshu`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_xiaohongshu`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_xiaohongshu.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_xinghuo`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_xinghuo`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_xinghuo.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ic_zhipu`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ic_zhipu`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_zhipu.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_ai_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_ai_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_ai_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_category_header`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_category_header`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;TextView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_category_header.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_engine_setting`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_engine_setting`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine_setting.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_letter`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_letter`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_letter.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_menu_setting`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_menu_setting`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_menu_setting.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`item_search_engine`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_item_search_engine`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_search_engine.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_floating_webview`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_floating_webview`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_webview.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_floating_window`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_floating_window`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_letter_index_bar`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_letter_index_bar`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.constraintlayout.widget.ConstraintLayout "
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_letter_index_bar.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`layout_menu_panel`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_layout_menu_panel`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_index_layout`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_index_layout`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\letter_index_layout.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`letter_wave`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_letter_wave`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\letter_wave.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`loading_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_loading_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\loading_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`menu_hide`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_menu_hide`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\menu_hide.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`menu_item`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_menu_item`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\menu_item.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`menu_item_bg`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_menu_item_bg`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\menu_item_bg.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`menu_show`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_menu_show`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\menu_show.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`overlay_dialog`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_overlay_dialog`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`paste_button_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_paste_button_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\paste_button_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`popup_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_popup_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\popup_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`preferences`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_preferences`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;PreferenceScreen "
        errorLine2=" ~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\xml\preferences.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`preview_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_preview_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\preview_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`progress_bar_drawable`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_progress_bar_drawable`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\progress_bar_drawable.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`quick_menu_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_quick_menu_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\quick_menu_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`quick_menu_layout`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_quick_menu_layout`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\quick_menu_layout.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`resize_handle_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_resize_handle_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\resize_handle_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`ripple_effect`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_ripple_effect`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ripple_effect.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`root_preferences`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_root_preferences`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;PreferenceScreen xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\xml\root_preferences.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\search_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_bar_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_bar_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\search_bar_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_engine_card`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_engine_card`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_history_item`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_history_item`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_item.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_history_layout`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_history_layout`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_layout.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_input_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_input_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\search_input_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_input_layout`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_input_layout`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_activity`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_activity`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\settings_activity.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_item_bg`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_item_bg`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\settings_item_bg.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_hint`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_hint`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;search_hint&quot;>输入搜索内容&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`voice_search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_voice_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;voice_search&quot;>语音搜索&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;search&quot;>搜索&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="6"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings&quot;>设置&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_general`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_general`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings_general&quot;>通用&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_display`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_display`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings_display&quot;>显示与外观&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_privacy`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_privacy`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings_privacy&quot;>隐私与安全&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_about`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_about`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings_about&quot;>关于&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`auto_hide`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_auto_hide`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;auto_hide&quot;>自动隐藏悬浮球&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`save`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_save`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;save&quot;>保存&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`permission_required`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_permission_required`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;permission_required&quot;>需要权限&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`voice_recognition_failed`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_voice_recognition_failed`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;voice_recognition_failed&quot;>语音识别失败，请重试&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_description`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_description`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;floating_ball_description&quot;>AI悬浮球图标&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_service_name`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_service_name`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;floating_ball_service_name&quot;>AI悬浮球服务&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_ball_service_description`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_ball_service_description`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;floating_ball_service_description&quot;>提供多个AI助手的快速访问&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`notification_channel_name`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_notification_channel_name`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;notification_channel_name&quot;>AI悬浮球服务&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`notification_channel_description`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_notification_channel_description`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;notification_channel_description&quot;>保持AI悬浮球服务在后台运行&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`service_running`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_service_running`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;service_running&quot;>AI悬浮球服务正在运行&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`search_engine_settings`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_search_engine_settings`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;search_engine_settings&quot;>搜索引擎排序&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`drag_to_sort`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_drag_to_sort`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;drag_to_sort&quot;>长按拖动排序&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`settings_title`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_settings_title`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;settings_title&quot;>设置&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`left_handed_mode`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_left_handed_mode`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;left_handed_mode&quot;>左手模式&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`left_handed_mode_description`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_left_handed_mode_description`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;left_handed_mode_description&quot;>调整界面布局以适应左手使用习惯&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`menu`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_menu`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;menu&quot;>菜单&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`close`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_close`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;close&quot;>关闭&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`expand`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_expand`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;expand&quot;>展开&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`collapse`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_collapse`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;collapse&quot;>收起&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`back`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_back`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;back&quot;>后退&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`forward`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_forward`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;forward&quot;>前进&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`refresh`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_refresh`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;refresh&quot;>刷新&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`floating_mode`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_floating_mode`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;floating_mode&quot;>悬浮窗模式&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`open_in_floating_mode`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_open_in_floating_mode`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;open_in_floating_mode&quot;>在悬浮窗中打开&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`engine_icon`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_engine_icon`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;string name=&quot;engine_icon&quot;>搜索引擎图标&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`TransparentTheme`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`AppTransparentTheme`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;style name=&quot;TransparentTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`FloatingCardDialog`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`AppFloatingCardDialog`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;style name=&quot;FloatingCardDialog&quot; parent=&quot;Theme.AppCompat.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`TransparentDialog`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`AppTransparentDialog`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;style name=&quot;TransparentDialog&quot; parent=&quot;Theme.MaterialComponents.DayNight.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`BottomBarButton`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`AppBottomBarButton`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;style name=&quot;BottomBarButton&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`Theme.AIFloatingBall`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`AppTheme.AIFloatingBall`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="    &lt;style name=&quot;Theme.AIFloatingBall&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\themes.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`toast_mode_change`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_toast_mode_change`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\toast_mode_change.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`voice_ripple`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_voice_ripple`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\voice_ripple.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`voice_ripple_background`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_voice_ripple_background`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\voice_ripple_background.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`voice_search_animation`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_voice_search_animation`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\voice_search_animation.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`window_hide`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_window_hide`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\window_hide.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ResourceName"
        severity="Fatal"
        message="Resource named &apos;`window_show`&apos; does not start with the project&apos;s resource prefix &apos;`app_`&apos;; rename to &apos;`app_window_show`&apos; ?"
        category="Correctness"
        priority="8"
        summary="Resource with Wrong Prefix"
        explanation="In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don&apos;t accidentally combine resources from different libraries, since they all end up in the same shared app namespace."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2=" ~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\window_show.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="ScopedStorage"
        severity="Warning"
        message="READ_EXTERNAL_STORAGE is deprecated (and is not granted) when targeting Android 13+. If you need to query or interact with MediaStore or media files on the shared storage, you should instead use one or more new storage permissions: `READ_MEDIA_IMAGES`, `READ_MEDIA_VIDEO` or `READ_MEDIA_AUDIO`."
        category="Correctness"
        priority="8"
        summary="Affected by scoped storage"
        explanation="Scoped storage is enforced on Android 10+ (or Android 11+ if using `requestLegacyExternalStorage`). In particular, `WRITE_EXTERNAL_STORAGE` will no longer provide write access to all files; it will provide the equivalent of `READ_EXTERNAL_STORAGE` instead.&#xA;&#xA;As of Android 13, if you need to query or interact with MediaStore or media files on the shared storage, you should be using instead one or more new storage permissions:&#xA;* `android.permission.READ_MEDIA_IMAGES`&#xA;* `android.permission.READ_MEDIA_VIDEO`&#xA;* `android.permission.READ_MEDIA_AUDIO`&#xA;&#xA;and then add `maxSdkVersion=&quot;33&quot;` to the older permission. See the developer guide for how to do this: https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions&#xA;&#xA;The `MANAGE_EXTERNAL_STORAGE` permission can be used to manage all files, but it is rarely necessary and most apps on Google Play are not allowed to use it. Most apps should instead migrate to use scoped storage. To modify or delete files, apps should request write access from the user as described at https://goo.gle/android-mediastore-createwriterequest.&#xA;&#xA;To learn more, read these resources: Play policy: https://goo.gle/policy-storage-help Allowable use cases: https://goo.gle/policy-storage-usecases"
        url="https://goo.gle/android-storage-usecases"
        urls="https://goo.gle/android-storage-usecases"
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; />"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\AndroidManifest.xml"
            line="12"
            column="36"/>
    </issue>

    <issue
        id="ScopedStorage"
        severity="Warning"
        message="WRITE_EXTERNAL_STORAGE is deprecated (and is not granted) when targeting Android 13+. If you need to write to shared storage, use the `MediaStore.createWriteRequest` intent."
        category="Correctness"
        priority="8"
        summary="Affected by scoped storage"
        explanation="Scoped storage is enforced on Android 10+ (or Android 11+ if using `requestLegacyExternalStorage`). In particular, `WRITE_EXTERNAL_STORAGE` will no longer provide write access to all files; it will provide the equivalent of `READ_EXTERNAL_STORAGE` instead.&#xA;&#xA;As of Android 13, if you need to query or interact with MediaStore or media files on the shared storage, you should be using instead one or more new storage permissions:&#xA;* `android.permission.READ_MEDIA_IMAGES`&#xA;* `android.permission.READ_MEDIA_VIDEO`&#xA;* `android.permission.READ_MEDIA_AUDIO`&#xA;&#xA;and then add `maxSdkVersion=&quot;33&quot;` to the older permission. See the developer guide for how to do this: https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions&#xA;&#xA;The `MANAGE_EXTERNAL_STORAGE` permission can be used to manage all files, but it is rarely necessary and most apps on Google Play are not allowed to use it. Most apps should instead migrate to use scoped storage. To modify or delete files, apps should request write access from the user as described at https://goo.gle/android-mediastore-createwriterequest.&#xA;&#xA;To learn more, read these resources: Play policy: https://goo.gle/policy-storage-help Allowable use cases: https://goo.gle/policy-storage-usecases"
        url="https://goo.gle/android-storage-usecases"
        urls="https://goo.gle/android-storage-usecases"
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; />"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\AndroidManifest.xml"
            line="13"
            column="36"/>
    </issue>

    <issue
        id="WebViewLayout"
        severity="Error"
        message="Placing a `&lt;WebView>` in a parent element that uses a `wrap_content layout_height` can lead to subtle bugs; use `match_parent` instead"
        category="Correctness"
        priority="7"
        summary="WebViews in wrap_content parents"
        explanation="The WebView implementation has certain performance optimizations which will not work correctly if the parent view is using `wrap_content` rather than `match_parent`. This can lead to subtle UI bugs."
        errorLine1="            &lt;WebView"
        errorLine2="             ~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="109"
            column="14"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="107"
            column="13"
            message="`wrap_content` here may not work well with WebView below"/>
    </issue>

    <issue
        id="WebViewLayout"
        severity="Error"
        message="Placing a `&lt;WebView>` in a parent element that uses a `wrap_content layout_height` can lead to subtle bugs; use `match_parent` instead"
        category="Correctness"
        priority="7"
        summary="WebViews in wrap_content parents"
        explanation="The WebView implementation has certain performance optimizations which will not work correctly if the parent view is using `wrap_content` rather than `match_parent`. This can lead to subtle UI bugs."
        errorLine1="            &lt;WebView"
        errorLine2="             ~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="97"
            column="14"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="95"
            column="13"
            message="`wrap_content` here may not work well with WebView below"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        prefs.edit().putBoolean(KEY_DEFAULT_SEARCH_MODE, enabled).commit()"
        errorLine2="                                                                  ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SettingsManager.kt"
            line="185"
            column="67"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="        prefs.edit().putBoolean(key, value).commit()"
        errorLine2="                                            ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SettingsManager.kt"
            line="227"
            column="45"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 26 (current min is 24): `android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="                type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\window\FloatingWindowManager.kt"
            line="66"
            column="24"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 26 (current min is 24): `android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1488"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 26 (current min is 24): `android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="            WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\menu\QuickMenuManager.kt"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 26 (current min is 24): `android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\service\QuickMenuService.kt"
            line="40"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 29 (current min is 26): `android.os.VibrationEffect#EFFECT_TICK`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="            vibrator.vibrate(VibrationEffect.createOneShot(20, VibrationEffect.EFFECT_TICK))"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="751"
            column="64"/>
    </issue>

    <issue
        id="MissingDefaultResource"
        severity="Fatal"
        message="The color &quot;letter_title_text_dark&quot; in values-night has no declaration in the base `values` folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier"
        category="Correctness"
        priority="6"
        summary="Missing Default"
        explanation="If a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.&#xA;&#xA;As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you  only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.&#xA;&#xA;There may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=&quot;MissingDefaultResource&quot;` on the element.&#xA;&#xA;(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)"
        errorLine1="    &lt;color name=&quot;letter_title_text_dark&quot;>#BBBBBB&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Error"
        message="Suspicious indentation: This is indented but is not continuing the previous expression (`params.flags = param`...)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="                            try {"
        errorLine2="                            ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="810"
            column="29"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="809"
            column="17"
            message="Previous statement here"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Error"
        message="Suspicious indentation: This is indented but is not continuing the previous expression (`val recognizedText =`...)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="                            showSearchInput()"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="962"
            column="29"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="961"
            column="25"
            message="Previous statement here"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Error"
        message="Suspicious indentation: This is indented but is not continuing the previous expression (`val query = searchIn`...)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="                    if (query.isNotEmpty()) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1669"
            column="21"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1668"
            column="17"
            message="Previous statement here"/>
    </issue>

    <issue
        id="SuspiciousIndentation"
        severity="Error"
        message="Suspicious indentation: This is indented but is not continuing the previous expression (`settingsManager.isLe`...)"
        category="Correctness"
        priority="6"
        summary="Suspicious indentation"
        explanation="This check looks for cases where the indentation suggests a grouping that isn&apos;t actually there in the code. A common example of this would be something like&#xA;```kotlin&#xA;if (column > width)&#xA;    line++&#xA;    column = 0&#xA;```&#xA;Here, the `column = 0` line will be executed every single time, not just if the condition is true."
        errorLine1="                handModeIcon.setImageResource(if (isChecked) R.drawable.ic_hand_left else R.drawable.ic_hand_right)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SettingsActivity.kt"
            line="63"
            column="17"/>
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SettingsActivity.kt"
            line="61"
            column="13"
            message="Previous statement here"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `min` is only used in API level 26 and higher (current min is 24)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="                            android:min=&quot;30&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="109"
            column="29"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `min` is only used in API level 26 and higher (current min is 24)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="            android:min=&quot;2&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\xml\preferences.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1325"
            column="45"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1325"
            column="45"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                                             ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1325"
            column="62"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                                             ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1325"
            column="62"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1471"
            column="45"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1471"
            column="45"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                                             ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1471"
            column="62"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: Gravity.LEFT, Gravity.RIGHT, GravityCompat.START, GravityCompat.END, Gravity.NO_GRAVITY"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                gravity = if (isLeftHanded) Gravity.END else Gravity.START"
        errorLine2="                                                             ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1471"
            column="62"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        floatingView = LayoutInflater.from(this).inflate(R.layout.layout_floating_webview, null)"
        errorLine2="                                                                                           ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="276"
            column="92"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            view = LayoutInflater.from(context).inflate(R.layout.layout_floating_window, null)"
        errorLine2="                                                                                         ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\window\FloatingWindowManager.kt"
            line="60"
            column="90"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            floatingBallView = LayoutInflater.from(this).inflate(R.layout.floating_ball, null)"
        errorLine2="                                                                                         ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="578"
            column="90"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            voiceAnimationView = LayoutInflater.from(this).inflate(R.layout.voice_search_animation, null)"
        errorLine2="                                                                                                    ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1012"
            column="101"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            val dialogView = LayoutInflater.from(this).inflate(R.layout.overlay_dialog, null)"
        errorLine2="                                                                                        ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1482"
            column="89"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        val menuItemView = LayoutInflater.from(this).inflate(R.layout.menu_item, null)"
        errorLine2="                                                                                 ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1669"
            column="82"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            val view = layoutInflater.inflate(R.layout.layout_menu_panel, null)"
        errorLine2="                                                                          ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="766"
            column="75"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="        menuView = LayoutInflater.from(context).inflate(R.layout.quick_menu_layout, null).apply {"
        errorLine2="                                                                                    ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\menu\QuickMenuManager.kt"
            line="24"
            column="85"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            quickMenuView = inflater.inflate(R.layout.quick_menu_layout, null)"
        errorLine2="                                                                         ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\service\QuickMenuService.kt"
            line="35"
            column="74"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        urls="https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/"
        errorLine1="            val toastView = inflater.inflate(R.layout.toast_mode_change, null)"
        errorLine2="                                                                         ~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1764"
            column="74"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialXml"
        severity="Warning"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        category="Correctness"
        priority="5"
        summary="Replace usage of `Switch` widget"
        explanation="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="                        &lt;Switch"
        errorLine2="                        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="70"
            column="25"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialXml"
        severity="Warning"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        category="Correctness"
        priority="5"
        summary="Replace usage of `Switch` widget"
        explanation="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="                        &lt;Switch"
        errorLine2="                        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="207"
            column="25"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialXml"
        severity="Warning"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        category="Correctness"
        priority="5"
        summary="Replace usage of `Switch` widget"
        explanation="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="                        &lt;Switch"
        errorLine2="                        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="297"
            column="25"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialXml"
        severity="Warning"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        category="Correctness"
        priority="5"
        summary="Replace usage of `Switch` widget"
        explanation="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="                        &lt;Switch"
        errorLine2="                        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="329"
            column="25"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                        android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="56"
            column="25"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                        android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="80"
            column="25"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                            android:tint=&quot;?android:attr/textColorPrimary&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="108"
            column="29"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="            android:tint=&quot;#666666&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="            android:tint=&quot;#666666&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="46"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="87"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="128"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="169"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="218"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="253"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="288"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;?android:attr/textColorSecondary&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="323"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="                    android:tint=&quot;@android:color/darker_gray&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="356"
            column="21"/>
    </issue>

    <issue
        id="UseAppTint"
        severity="Error"
        message="Must use `app:tint` instead of `android:tint`"
        category="Correctness"
        priority="1"
        summary="`app:tint` attribute should be used on `ImageView` and `ImageButton`"
        explanation="`ImageView` or `ImageButton` uses `android:tint` instead of `app:tint`"
        errorLine1="        android:tint=&quot;#757575&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_item.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `AppCompatResources.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="            background.background = getDrawable(R.drawable.circle_ripple_active)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="957"
            column="37"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `AppCompatResources.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="            background.background = getDrawable(R.drawable.circle_ripple_active)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="957"
            column="37"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `AppCompatResources.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="            background.background = getDrawable(R.drawable.circle_ripple)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="961"
            column="37"/>
    </issue>

    <issue
        id="UseCompatLoadingForDrawables"
        severity="Warning"
        message="Use `AppCompatResources.getDrawable()`"
        category="Correctness"
        priority="1"
        summary="Should not call `Context.getDrawable` or `Resources.getDrawable` directly"
        explanation="Use Compat loading of drawables"
        errorLine1="            background.background = getDrawable(R.drawable.circle_ripple)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="961"
            column="37"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="            javaScriptEnabled = true"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\CardLayoutAdapter.kt"
            line="172"
            column="13"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="            javaScriptEnabled = true"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="173"
            column="13"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="                javaScriptEnabled = true"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="349"
            column="17"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="                javaScriptEnabled = true"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\window\FloatingWindowManager.kt"
            line="117"
            column="17"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="            javaScriptEnabled = true"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FullscreenWebViewActivity.kt"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="                javaScriptEnabled = true"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="543"
            column="17"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="            javaScriptEnabled = true"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="635"
            column="13"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into your application, review carefully"
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="https://goo.gle/SetJavaScriptEnabled"
        urls="https://goo.gle/SetJavaScriptEnabled,https://developer.android.com/training/articles/security-tips"
        errorLine1="            javaScriptEnabled = true"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="170"
            column="13"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`screenshotReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.SCREENSHOT_COMPLETED"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(screenshotReceiver, screenshotFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="282"
            column="17"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`themeReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.LAYOUT_THEME_CHANGED"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(themeReceiver, themeFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="294"
            column="17"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`menuUpdateReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.ACTION_UPDATE_MENU"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(menuUpdateReceiver, menuUpdateFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="395"
            column="17"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`settingsReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.SETTINGS_CHANGED"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(settingsReceiver, settingsFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1608"
            column="17"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`layoutThemeReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.LAYOUT_THEME_CHANGED"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(layoutThemeReceiver, themeFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1617"
            column="17"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        severity="Warning"
        message="`searchModeReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for com.example.aifloatingball.SEARCH_MODE_CHANGED"
        category="Security"
        priority="5"
        summary="Missing `registerReceiver()` exported flag"
        explanation="A future platform release will require all receivers registering for non-system broadcasts to include a flag indicating the receiver&apos;s exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.&#xA;&#xA;If you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases."
        url="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        urls="https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)"
        errorLine1="                registerReceiver(searchModeReceiver, searchModeFilter)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1628"
            column="17"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="        notifyDataSetChanged()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\CardLayoutAdapter.kt"
            line="154"
            column="9"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="        notifyDataSetChanged()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\CardLayoutAdapter.kt"
            line="166"
            column="9"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="        notifyDataSetChanged()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="254"
            column="9"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="                notifyDataSetChanged()"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="265"
            column="17"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="            notifyDataSetChanged()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1141"
            column="13"/>
    </issue>

    <issue
        id="NotifyDataSetChanged"
        severity="Warning"
        message="It will always be more efficient to use more specific change events if you can. Rely on `notifyDataSetChanged` as a last resort."
        category="Performance"
        priority="8"
        summary="Invalidating All RecyclerView Data"
        explanation="The `RecyclerView` adapter&apos;s `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views."
        errorLine1="        notifyDataSetChanged()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchEngineAdapter.kt"
            line="48"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\CardLayoutAdapter.kt"
            line="185"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="186"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\CardLayoutAdapter.kt"
            line="194"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\adapter\CardLayoutAdapter.kt"
            line="195"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="381"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="1173"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="2021"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\PermissionActivity.kt"
            line="161"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="661"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="666"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                    val errorDescription = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="695"
            column="48"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                    val errorDescription = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="695"
            column="48"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="182"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="This folder configuration (`v21`) is unnecessary; `minSdkVersion` is 24. Merge all the resources in this folder into `values`."
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-v21"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine.xml"
            line="10"
            column="6"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\toast_mode_change.xml"
            line="12"
            column="6"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (1460 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="        android:pathData=&quot;M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z&quot;/>"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_chatgpt.xml"
            line="9"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (904 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="        android:pathData=&quot;M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z&quot;/>"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_manage.xml"
            line="9"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (904 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="        android:pathData=&quot;M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z&quot;/>"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_settings.xml"
            line="9"
            column="27"/>
    </issue>

    <issue
        id="MergeRootFrame"
        severity="Warning"
        message="This `&lt;FrameLayout>` can be replaced with a `&lt;merge>` tag"
        category="Performance"
        priority="4"
        summary="FrameLayout can be replaced with `&lt;merge>` tag"
        explanation="If a `&lt;FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `&lt;merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `&lt;merge>` tag works before proceeding."
        url="https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html"
        urls="https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html"
        errorLine1="&lt;FrameLayout"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_engine_settings.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="MergeRootFrame"
        severity="Warning"
        message="This `&lt;FrameLayout>` can be replaced with a `&lt;merge>` tag"
        category="Performance"
        priority="4"
        summary="FrameLayout can be replaced with `&lt;merge>` tag"
        explanation="If a `&lt;FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `&lt;merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `&lt;merge>` tag works before proceeding."
        url="https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html"
        urls="https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a `LinearLayout` is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="18"
            column="6"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set `android:baselineAligned=&quot;false&quot;` on this element for better performance"
        category="Performance"
        priority="3"
        summary="Missing `baselineAligned` attribute"
        explanation="When a `LinearLayout` is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="189"
            column="6"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="                android:layout_weight=&quot;1&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="240"
            column="17"/>
    </issue>

    <issue
        id="NestedWeights"
        severity="Warning"
        message="Nested weights are bad for performance"
        category="Performance"
        priority="3"
        summary="Nested layout weights"
        explanation="Layout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially."
        errorLine1="                android:layout_weight=&quot;1&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="56"
            column="17"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `?android:attr/colorBackground` with a theme that also paints a background (inferred theme is `@style/Theme_AIFloatingBall`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;?android:attr/colorBackground&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `?android:attr/selectableItemBackground` with a theme that also paints a background (inferred theme is `@style/Theme_AIFloatingBall`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;?android:attr/selectableItemBackground&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_ai_engine.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `?android:attr/windowBackground` with a theme that also paints a background (inferred theme is `@style/Theme.AIFloatingBall`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;?android:attr/windowBackground&quot;/> "
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_category_header.xml"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `?attr/selectableItemBackground` with a theme that also paints a background (inferred theme is `@style/Theme.AIFloatingBall`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;?attr/selectableItemBackground&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine_setting.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `#FFFFFF` with a theme that also paints a background (inferred theme is `@style/Theme.AIFloatingBall`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;#FFFFFF&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.activity_permission` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.activity_search_web_view` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.constraintlayout.widget.ConstraintLayout "
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_web_view.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.theme_entries` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;theme_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="3"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.theme_values` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;theme_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="9"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.layout_theme_entries` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;layout_theme_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="15"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.layout_theme_values` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;layout_theme_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="21"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.home_page_entries` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;home_page_entries&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="27"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.home_page_values` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;home_page_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="36"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.letter_index_bar_positions` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;letter_index_bar_positions&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="45"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.letter_index_bar_position_values` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string-array name=&quot;letter_index_bar_position_values&quot;>"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\arrays.xml"
            line="50"
            column="19"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.bg_letter_index_bar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_index_bar.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.bg_letter_preview` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_preview.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.bg_letter_selected` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\bg_letter_selected.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.button_background_confirm` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\button_background_confirm.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.card_header_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\card_header_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.card_layout_theme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.coordinatorlayout.widget.CoordinatorLayout"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_layout_theme.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.card_search_engine` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_search_engine.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.circle_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\circle_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.clipboard_dialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.letter_title_text_dark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;letter_title_text_dark&quot;>#BBBBBB&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values-night\colors.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;primary&quot;>#2196F3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primary_dark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;primary_dark&quot;>#1976D2&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.accent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;accent&quot;>#FF4081&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.transparent_black` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;transparent_black&quot;>#80000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.purple_200` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;purple_200&quot;>#FFBB86FC&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;background&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.text_primary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;text_primary&quot;>#212121&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.text_secondary` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;text_secondary&quot;>#757575&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.search_input_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;search_input_background&quot;>#F5F5F5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.search_input_stroke` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;search_input_stroke&quot;>#E0E0E0&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.letter_index_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;letter_index_text&quot;>#99000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.letter_index_text_selected` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;letter_index_text_selected&quot;>#FF000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progress_color_light` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;progress_color_light&quot;>@color/colorAccent&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="97"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progress_color_dark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;progress_color_dark&quot;>@color/colorAccent&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="98"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.flyme_preview_text_color` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;flyme_preview_text_color&quot;>#333333&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="110"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.flyme_preview_text_color_dark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;color name=&quot;flyme_preview_text_color_dark&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\colors.xml"
            line="111"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.card_spacing` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;card_spacing&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.preview_text_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;preview_text_size&quot;>18sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.preview_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;preview_padding&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_width&quot;>32dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.preview_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;preview_width&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_bar_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_bar_width&quot;>48dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="9"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_bar_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_bar_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.search_history_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;search_history_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.engine_list_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;engine_list_width&quot;>280dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.search_input_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;search_input_margin&quot;>64dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_text_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_text_size&quot;>12sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_padding&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.toolbar_padding` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;toolbar_padding&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_horizontal_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_vertical_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;activity_vertical_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.floating_webview_collapsed_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;floating_webview_collapsed_height&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.floating_card_edge_elevation` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;floating_card_edge_elevation&quot;>4dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.edge_button_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;edge_button_margin&quot;>8dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.button_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;button_margin&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.flyme_edge_trigger_threshold` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;flyme_edge_trigger_threshold&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.letter_index_item_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;dimen name=&quot;letter_index_item_height&quot;>36dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.drawer_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\drawer_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.engine_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\engine_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.floating_ball_layout` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_ball_layout.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.floating_webview` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.floating_window_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\floating_window_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_baseline_close_24` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_close_24.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_baseline_menu_24` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_menu_24.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_baseline_search_24` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_baseline_search_24.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_bluetooth` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_bluetooth.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_brightness` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_brightness.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_default_ai` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_default_ai.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_doubao` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_doubao.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_edit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_edit.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_expand_less` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_expand_less.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_hand` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_hand.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_launcher_foreground` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_launcher_foreground.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_agenda` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_agenda.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_call` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_call.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_camera` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_camera.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_compass` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_compass.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_directions` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_directions.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_edit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_edit.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_gallery` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_gallery.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_help` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_help.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_info_details` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_info_details.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_manage` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_manage.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_rotate` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_rotate.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_search.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_send` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_send.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_today` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_today.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_menu_zoom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_menu_zoom.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_mode_switch` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_mode_switch.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_recent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_recent.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_wifi` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_wifi.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_xiaohongshu` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ic_xiaohongshu.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.item_engine` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.item_engine_setting` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine_setting.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.item_letter` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_letter.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.layout_letter_index_bar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.constraintlayout.widget.ConstraintLayout "
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_letter_index_bar.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.letter_index_layout` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\letter_index_layout.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.letter_wave` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\letter_wave.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.paste_button_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\paste_button_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.xml.preferences` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;PreferenceScreen "
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\xml\preferences.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.preview_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\preview_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ripple_effect` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;ripple xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\ripple_effect.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.xml.root_preferences` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;PreferenceScreen xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\xml\root_preferences.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.search_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\drawable\search_background.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.search_history_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.search_history_layout` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_layout.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.search_input_layout` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.settings_activity` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\settings_activity.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.voice_search` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;voice_search&quot;>语音搜索&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings&quot;>设置&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings_general` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings_general&quot;>通用&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings_display` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings_display&quot;>显示与外观&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings_privacy` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings_privacy&quot;>隐私与安全&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.settings_about` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;settings_about&quot;>关于&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.auto_hide` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;auto_hide&quot;>自动隐藏悬浮球&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.save` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;save&quot;>保存&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.permission_required` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;permission_required&quot;>需要权限&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.voice_recognition_failed` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;voice_recognition_failed&quot;>语音识别失败，请重试&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.floating_ball_service_name` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;floating_ball_service_name&quot;>AI悬浮球服务&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.floating_ball_service_description` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;floating_ball_service_description&quot;>提供多个AI助手的快速访问&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.notification_channel_name` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;notification_channel_name&quot;>AI悬浮球服务&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.notification_channel_description` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;notification_channel_description&quot;>保持AI悬浮球服务在后台运行&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.service_running` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;service_running&quot;>AI悬浮球服务正在运行&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.drag_to_sort` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;drag_to_sort&quot;>长按拖动排序&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.appearance` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;appearance&quot;>外观&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.left_handed_mode` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;left_handed_mode&quot;>左手模式&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.left_handed_mode_description` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;left_handed_mode_description&quot;>调整界面布局以适应左手使用习惯&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.menu` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;menu&quot;>菜单&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.collapse` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;collapse&quot;>收起&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.open_in_floating_mode` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;open_in_floating_mode&quot;>在悬浮窗中打开&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.engine_icon` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;string name=&quot;engine_icon&quot;>搜索引擎图标&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\strings.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.TransparentTheme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;TransparentTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.FloatingCardDialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;FloatingCardDialog&quot; parent=&quot;Theme.AppCompat.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.AppTheme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\values\styles.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.window_hide` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\window_hide.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.window_show` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.&#xA;,"
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\anim\window_show.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `FrameLayout` parent is unnecessary; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_ball_layout.xml"
            line="7"
            column="6"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `FrameLayout` parent is unnecessary; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Unnecessary parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="     ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="7"
            column="6"/>
    </issue>

    <issue
        id="MonochromeLauncherIcon"
        severity="Warning"
        message="The application adaptive icon is missing a monochrome tag"
        category="Usability:Icons"
        priority="6"
        summary="Monochrome icon is not defined"
        explanation="If `android:roundIcon` and `android:icon` are both in your manifest, you must either remove the reference to `android:roundIcon` if it is not needed; or, supply the monochrome icon in the drawable defined by the `android:roundIcon` and `android:icon` attribute.&#xA;&#xA;For example, if `android:roundIcon` and `android:icon` are both in the manifest, a launcher might choose to use `android:roundIcon` over `android:icon` to display the adaptive app icon. Therefore, your themed application iconwill not show if your monochrome attribute is not also specified in `android:roundIcon`."
        errorLine1="&lt;adaptive-icon xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://material.io/components/dialogs/"
        urls="https://material.io/components/dialogs/"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="27"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://material.io/components/dialogs/"
        urls="https://material.io/components/dialogs/"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="37"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://material.io/components/dialogs/"
        urls="https://material.io/components/dialogs/"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="32"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://material.io/components/dialogs/"
        urls="https://material.io/components/dialogs/"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="43"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="https://material.io/components/dialogs/"
        urls="https://material.io/components/dialogs/"
        errorLine1="        &lt;Button"
        errorLine2="         ~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="53"
            column="10"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than `11sp`: `10sp`"
        category="Usability"
        priority="4"
        summary="Text size is too small"
        explanation="Avoid using sizes smaller than 11sp."
        errorLine1="        android:textSize=&quot;10sp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\menu_item.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                    &lt;EditText"
        errorLine2="                     ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="58"
            column="22"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                            &lt;EditText"
        errorLine2="                             ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="67"
            column="30"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="            &lt;EditText"
        errorLine2="             ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="18"
            column="14"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText"
        errorLine2="                 ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_webview.xml"
            line="73"
            column="18"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            setOnTouchListener { view, event ->"
        errorLine2="                               ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="395"
            column="32"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``Void`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        floatingView?.setOnTouchListener { view, event ->"
        errorLine2="        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="598"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        floatingView?.setOnTouchListener { view, event ->"
        errorLine2="                                         ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="598"
            column="42"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``Void`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        resizeHandle?.setOnTouchListener { _, event ->"
        errorLine2="        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="849"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        resizeHandle?.setOnTouchListener { _, event ->"
        errorLine2="                                         ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWebViewService.kt"
            line="849"
            column="42"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            view.findViewById&lt;View>(R.id.title_bar).setOnTouchListener { _, event ->"
        errorLine2="                                                                       ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\window\FloatingWindowManager.kt"
            line="93"
            column="72"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``Void`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            floatingBallView?.setOnTouchListener { view, event ->"
        errorLine2="            ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="603"
            column="13"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            floatingBallView?.setOnTouchListener { view, event ->"
        errorLine2="                                                 ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="603"
            column="50"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``FrameLayout`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            container.setOnTouchListener { _, event ->"
        errorLine2="            ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1651"
            column="13"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            container.setOnTouchListener { _, event ->"
        errorLine2="                                         ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\FloatingWindowService.kt"
            line="1651"
            column="42"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        view.setOnTouchListener { _, event ->"
        errorLine2="                                ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\gesture\GestureManager.kt"
            line="159"
            column="33"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `LetterIndexBar` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    override fun onTouchEvent(event: MotionEvent): Boolean {"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\views\LetterIndexBar.kt"
            line="110"
            column="18"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `LetterIndexBar` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    override fun onTouchEvent(event: MotionEvent): Boolean {"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\view\LetterIndexBar.kt"
            line="230"
            column="18"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        findViewById&lt;View>(android.R.id.content).setOnTouchListener { _, event ->"
        errorLine2="                                                                    ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="533"
            column="69"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``WebView`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        webView.setOnTouchListener { _, event ->"
        errorLine2="        ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="805"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`onTouch` lambda should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="        webView.setOnTouchListener { _, event ->"
        errorLine2="                                   ^">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="805"
            column="36"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                    &lt;ImageView"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="50"
            column="22"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                    &lt;ImageButton"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="73"
            column="22"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageButton"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="121"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageButton"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="144"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageButton"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="152"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageButton"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="161"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="149"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="55"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="90"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="126"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="192"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="227"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="284"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="316"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                        &lt;ImageView"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="351"
            column="26"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine_setting.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine_setting.xml"
            line="25"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_menu_setting.xml"
            line="13"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_menu_setting.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageView"
        errorLine2="             ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="19"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="35"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="            &lt;ImageButton"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="44"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="40"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="81"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="122"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="163"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="212"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="247"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="282"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="317"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="                &lt;ImageView"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="350"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="        &lt;ImageView"
        errorLine2="         ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\letter_index_layout.xml"
            line="17"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\menu_item.xml"
            line="12"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app&apos;s minSdkVersion is 16 or higher, you can instead set these graphical elements&apos; `android:importantForAccessibility` attributes to `no`.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageView"
        errorLine2="     ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_item.xml"
            line="10"
            column="6"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                text = &quot;没有以 $letter 开头的搜索引擎&quot;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\HomeActivity.kt"
            line="1140"
            column="24"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                text = &quot;没有以 $letter 开头的搜索引擎&quot;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\dalao\SearchActivity.kt"
            line="107"
            column="24"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                        text = &quot;${engine.name} (AI)&quot;"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1021"
            column="32"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                        text = &quot;${engine.name} (AI)&quot;"
        errorLine2="                                              ~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1021"
            column="47"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                messageView.text = &quot;AI搜索模式已启用&quot;"
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1772"
            column="37"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                text = &quot;没有以 $letter 开头的搜索引擎&quot;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchActivity.kt"
            line="1896"
            column="24"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="https://developer.android.com/guide/topics/resources/localization.html"
        urls="https://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="                    text = &quot;没有以 $letter 开头的搜索引擎&quot;"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\java\com\example\aifloatingball\SearchWebViewActivity.kt"
            line="330"
            column="28"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索或输入网址&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:hint=&quot;搜索或输入网址&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_home.xml"
            line="64"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;自定义悬浮菜单&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;自定义悬浮菜单&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_menu_settings.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;提示：长按拖动可调整顺序&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;提示：长按拖动可调整顺序&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_menu_settings.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;保存设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;保存设置&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_menu_settings.xml"
            line="34"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索悬浮球需要以下权限才能正常运行：&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;搜索悬浮球需要以下权限才能正常运行：&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;• 悬浮窗权限\n• 麦克风权限\n• 通知权限&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;• 悬浮窗权限\n• 麦克风权限\n• 通知权限&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;请在接下来的提示中允许这些权限&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;请在接下来的提示中允许这些权限&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_permission.xml"
            line="33"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;菜单&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:contentDescription=&quot;菜单&quot;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="45"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;切换搜索引擎&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:contentDescription=&quot;切换搜索引擎&quot;/>"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="65"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索或输入网址&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                                android:hint=&quot;搜索或输入网址&quot;"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="73"
            column="33"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;清除搜索&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:contentDescription=&quot;清除搜索&quot;/>"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="88"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;关闭&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:contentDescription=&quot;关闭&quot;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="104"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;正在加载...&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:text=&quot;正在加载...&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search.xml"
            line="189"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;输入搜索内容&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:hint=&quot;输入搜索内容&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="23"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;搜索&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="33"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;关闭&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;关闭&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_search_webview.xml"
            line="41"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;常用设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;常用设置&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="32"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;右手模式&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;右手模式&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="68"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;悬浮球大小&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;悬浮球大小&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="101"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;主题设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;主题设置&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="137"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;跟随系统&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;跟随系统&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="146"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;搜索设置&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="170"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;普通搜索引擎&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;普通搜索引擎&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="205"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索引擎设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;搜索引擎设置&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="238"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;其他设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:text=&quot;其他设置&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="262"
            column="21"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;隐私模式&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;隐私模式&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="295"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;开机自启&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;开机自启&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="327"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;检查更新&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                            android:text=&quot;检查更新&quot; />"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\activity_settings.xml"
            line="362"
            column="29"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;引擎图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;引擎图标&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="28"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;展开/折叠&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;展开/折叠&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="49"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;最小化&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;最小化&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;后退&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;后退&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="79"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;前进&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;前进&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="87"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;刷新&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;刷新&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="95"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索引擎图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;搜索引擎图标&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_search_engine.xml"
            line="33"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;取消&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;取消&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;确定&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;确定&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\clipboard_dialog.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;搜索&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_ball_layout.xml"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;最小化&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:contentDescription=&quot;最小化&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;关闭&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:contentDescription=&quot;关闭&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\floating_webview.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索引擎图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:contentDescription=&quot;搜索引擎图标&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_ai_engine.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;引擎图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:contentDescription=&quot;引擎图标&quot;/>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_engine.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索引擎图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:contentDescription=&quot;搜索引擎图标&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\item_search_engine.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;功能面板&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;功能面板&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;无图模式&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;无图模式&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;电脑版&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;电脑版&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="101"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;广告过滤&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;广告过滤&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="142"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;隐身模式&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;隐身模式&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="183"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;书签&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;书签&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="226"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;历史&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;历史&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="261"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;分享&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;分享&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="296"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;夜间&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;夜间&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_menu_panel.xml"
            line="331"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;打开链接&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;打开链接&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索内容&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;搜索内容&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="50"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;取消&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;取消&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\overlay_dialog.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;设置&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\quick_menu_layout.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;关闭&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;关闭&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\quick_menu_layout.xml"
            line="32"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;更多选项&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;更多选项&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="40"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;最小化&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;最小化&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="59"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;后退&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;后退&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="67"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;前进&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;前进&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="75"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;刷新&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:contentDescription=&quot;刷新&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="83"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索历史&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;搜索历史&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_history_layout.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;输入搜索内容&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:hint=&quot;输入搜索内容&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;语音输入&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:contentDescription=&quot;语音输入&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;搜索&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:contentDescription=&quot;搜索&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_input_layout.xml"
            line="38"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;模式图标&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:contentDescription=&quot;模式图标&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\toast_mode_change.xml"
            line="24"
            column="13"/>
    </issue>

    <issue
        id="RelativeOverlap"
        severity="Warning"
        message="`@id/engine_name` can overlap `@id/btn_minimize` if @id/engine_name grows due to localized text expansion"
        category="Internationalization"
        priority="3"
        summary="Overlapping items in RelativeLayout"
        explanation="If relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like `toEndOf`/`toStartOf`."
        errorLine1="            &lt;TextView"
        errorLine2="             ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\card_ai_engine.xml"
            line="30"
            column="14"/>
    </issue>

    <issue
        id="RelativeOverlap"
        severity="Warning"
        message="`@id/engine_name` can overlap `@id/btn_minimize` if @id/engine_name grows due to localized text expansion"
        category="Internationalization"
        priority="3"
        summary="Overlapping items in RelativeLayout"
        explanation="If relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like `toEndOf`/`toStartOf`."
        errorLine1="            &lt;TextView"
        errorLine2="             ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\layout_floating_window.xml"
            line="25"
            column="14"/>
    </issue>

    <issue
        id="RelativeOverlap"
        severity="Warning"
        message="`@id/engine_title` can overlap `@id/options_button` if @id/engine_title grows due to localized text expansion"
        category="Internationalization"
        priority="3"
        summary="Overlapping items in RelativeLayout"
        explanation="If relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like `toEndOf`/`toStartOf`."
        errorLine1="            &lt;TextView"
        errorLine2="             ~~~~~~~~">
        <location
            file="C:\D-drive-503984\dalao\app\src\main\res\layout\search_engine_card.xml"
            line="22"
            column="14"/>
    </issue>

</issues>
