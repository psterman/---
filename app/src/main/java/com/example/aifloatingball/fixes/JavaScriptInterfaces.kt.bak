package com.example.aifloatingball.fixes

import android.os.Handler
import android.os.Looper
import android.util.Log
import android.webkit.JavascriptInterface
import android.webkit.WebView

/**
 * JavaScript interfaces for text selection in WebView
 */
class TextSelectionJavaScriptInterface(
    private val webView: WebView,
    private val textSelectionManager: TextSelectionManager
) {
    companion object {
        private const val TAG = "TextSelectionJS"
    }

    // Main thread handler
    private val mainHandler = Handler(Looper.getMainLooper())

    /**
     * Called when text selection changes in WebView
     */
    @JavascriptInterface
    fun onSelectionChanged(selectedText: String, leftX: Float, leftY: Float, rightX: Float, rightY: Float) {
        Log.d(TAG, "Selection changed: $selectedText, Coordinates: ($leftX, $leftY) to ($rightX, $rightY)")
        
        if (selectedText.isNotEmpty()) {
            mainHandler.post {
                // Show selection handles
                textSelectionManager.updateSelection(
                    selectedText, 
                    leftX.toInt(), 
                    leftY.toInt(), 
                    rightX.toInt(), 
                    rightY.toInt()
                )
            }
        }
    }

    /**
     * Get the current selected text
     */
    @JavascriptInterface
    fun getSelectedText(): String {
        return textSelectionManager.selectedText ?: ""
    }

    /**
     * Clear the current selection
     */
    @JavascriptInterface
    fun clearSelection() {
        mainHandler.post {
            textSelectionManager.hideMenu()
        }
    }

    /**
     * Enable text selection in WebView
     */
    fun enableTextSelection() {
        val script = """
            (function() {
                if (!window._selectionEnabled) {
                    // Prevent default selection behavior
                    document.documentElement.style.webkitUserSelect = 'text';
                    document.documentElement.style.userSelect = 'text';
                    
                    // Disable context menu to prevent default selection menu
                    document.addEventListener('contextmenu', function(e) {
                        e.preventDefault();
                        return false;
                    }, true);
                    
                    // Disable touchcancel events which might interfere with selection
                    document.addEventListener('touchcancel', function(e) {
                        if (window.getSelection().toString().trim().length > 0) {
                            e.preventDefault();
                            return false;
                        }
                    }, true);
                    
                    // Apply custom styles for better readability
                    var style = document.createElement('style');
                    style.textContent = `
                        ::selection {
                            background: rgba(64, 150, 255, 0.3) !important;
                            color: inherit !important;
                        }
                    `;
                    document.head.appendChild(style);
                    
                    // Track selection changes
                    document.addEventListener('selectionchange', function() {
                        var selection = window.getSelection();
                        
                        if (selection && selection.toString().trim().length > 0) {
                            var range = selection.getRangeAt(0);
                            var rects = range.getClientRects();
                            
                            if (rects.length > 0) {
                                var firstRect = rects[0];
                                var lastRect = rects[rects.length - 1];
                                
                                // Report selection to native code
                                window.textSelectionCallback.onSelectionChanged(
                                    selection.toString(),
                                    firstRect.left + window.scrollX,
                                    firstRect.bottom + window.scrollY,
                                    lastRect.right + window.scrollX,
                                    lastRect.bottom + window.scrollY
                                );
                            }
                        }
                    }, false);
                    
                    window._selectionEnabled = true;
                    console.log('Text selection enabled');
                    return true;
                }
                return false;
            })();
        """
        
        webView.evaluateJavascript(script) { result ->
            Log.d(TAG, "Enable text selection result: $result")
        }
        
        // Keep selection visible
        textSelectionManager.refreshSelection()
    }

    /**
     * Setup text selection for a WebView
     */
    fun setupWebViewForTextSelection() {
        // Add this interface to the WebView
        webView.addJavascriptInterface(this, "textSelectionCallback")
        
        // Enable text selection
        enableTextSelection()
    }
} 