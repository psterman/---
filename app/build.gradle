plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.aifloatingball'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.aifloatingball"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        resourcePrefix 'app_'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        encoding = 'UTF-8'
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            "-Xlint:-options"
        ]
    }

    buildFeatures {
        viewBinding true
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    
    packaging {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/license.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/notice.txt',
                'META-INF/*.kotlin_module'
            ]
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.webkit:webkit:1.8.0'
    implementation 'androidx.annotation:annotation:1.7.1'
    
    implementation 'androidx.dynamicanimation:dynamicanimation:1.1.0-alpha03'
    implementation 'androidx.window:window:1.2.0'
    
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.7.0'
    
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.belerweb:pinyin4j:2.5.1'
    implementation 'com.airbnb.android:lottie:6.1.0'
    
    implementation "androidx.interpolator:interpolator:1.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-Xlint:-options")
    options.encoding = 'UTF-8'
    options.forkOptions.jvmArgs.add('-Xmx2048m')
}

tasks.register('cleanJdkImageCache', Delete) {
    delete fileTree(dir: "${System.getProperty('user.home')}/.gradle/caches/transforms-3") {
        include "**/jdkImage/**"
        include "**/temp/jmod/**"
    }
}

// Add this task to completely skip the Java compilation if it fails
tasks.whenTaskAdded { task ->
    if (task.name == 'compileDebugJavaWithJavac' || task.name == 'compileReleaseJavaWithJavac') {
        task.enabled = false
    }
} 